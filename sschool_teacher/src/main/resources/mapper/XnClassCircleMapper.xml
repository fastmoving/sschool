<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.usoft.sschool_teacher.mapper.XnClassCircleMapper">
  <resultMap id="BaseResultMap" type="com.usoft.smartschool.pojo.XnClassCircle">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="schoolId" jdbcType="INTEGER" property="schoolid" />
    <result column="classId" jdbcType="INTEGER" property="classid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="userType" jdbcType="TINYINT" property="usertype" />
    <result column="fileUrl" jdbcType="VARCHAR" property="fileurl" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, schoolId, classId, userId, userType, fileUrl, description, createTime, status
  </sql>
  <select id="selectByExample" parameterType="com.usoft.smartschool.pojo.XnClassCircleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xn_class_circle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xn_class_circle
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xn_class_circle
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.usoft.smartschool.pojo.XnClassCircleExample">
    delete from xn_class_circle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.usoft.smartschool.pojo.XnClassCircle">
    insert into xn_class_circle (id, schoolId, classId, 
      userId, userType, fileUrl, 
      description, createTime, status
      )
    values (#{id,jdbcType=INTEGER}, #{schoolid,jdbcType=INTEGER}, #{classid,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER}, #{usertype,jdbcType=TINYINT}, #{fileurl,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.usoft.smartschool.pojo.XnClassCircle">
    insert into xn_class_circle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="schoolid != null">
        schoolId,
      </if>
      <if test="classid != null">
        classId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="usertype != null">
        userType,
      </if>
      <if test="fileurl != null">
        fileUrl,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="schoolid != null">
        #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=TINYINT},
      </if>
      <if test="fileurl != null">
        #{fileurl,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.usoft.smartschool.pojo.XnClassCircleExample" resultType="java.lang.Integer">
    select count(*) from xn_class_circle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update xn_class_circle
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolid != null">
        schoolId = #{record.schoolid,jdbcType=INTEGER},
      </if>
      <if test="record.classid != null">
        classId = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.usertype != null">
        userType = #{record.usertype,jdbcType=TINYINT},
      </if>
      <if test="record.fileurl != null">
        fileUrl = #{record.fileurl,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update xn_class_circle
    set id = #{record.id,jdbcType=INTEGER},
      schoolId = #{record.schoolid,jdbcType=INTEGER},
      classId = #{record.classid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      userType = #{record.usertype,jdbcType=TINYINT},
      fileUrl = #{record.fileurl,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.usoft.smartschool.pojo.XnClassCircle">
    update xn_class_circle
    <set>
      <if test="schoolid != null">
        schoolId = #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="classid != null">
        classId = #{classid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="usertype != null">
        userType = #{usertype,jdbcType=TINYINT},
      </if>
      <if test="fileurl != null">
        fileUrl = #{fileurl,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.usoft.smartschool.pojo.XnClassCircle">
    update xn_class_circle
    set schoolId = #{schoolid,jdbcType=INTEGER},
      classId = #{classid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      userType = #{usertype,jdbcType=TINYINT},
      fileUrl = #{fileurl,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <sql id="Base_class_circle_list">
    `xcc`.id,`xcc`.schoolId,`xcc`.classId,`xcc`.userId,`xcc`.userType,
    `xcc`.fileUrl,`xcc`.description,`xcc`.createTime,`xcc`.`status`
  </sql>

  <select id="getClassCircle" resultType="java.util.Map" parameterType="java.util.Map">
      SELECT
          <include refid="Base_class_circle_list"/>,
          hsi.SName,
          hsi.SPhoto,
          hs.ClassName
      from xn_class_circle xcc
      LEFT JOIN hl_studentinfo hsi on hsi.ID = xcc.userId
      LEFT JOIN hl_schclass hs on hs.ID = xcc.classId
      <where>
        xcc.userType=1
        <if test="classId !=null">
          and xcc.classId=${classId}
        </if>
        <if test="circleId!=null">
          and xcc.id =${circleId}
        </if>
        and xcc.`status`=1
      </where>
      <if test="page!=null and start!=null">
        LIMIT ${start},${page}
      </if>
  </select>

  <select id="getClassCircleIfo" resultType="java.util.Map" parameterType="java.util.Map">
    SELECT
    <include refid="Base_class_circle_list"/>,
    hsi.SName,
    hsi.SPhoto,
    hs.ClassName
    from xn_class_circle xcc
    LEFT JOIN hl_studentinfo hsi on hsi.ID = xcc.userId
    LEFT JOIN hl_schclass hs on hs.ID = xcc.classId
    <where>
      xcc.userType=1
      <if test="classId !=null">
        and xcc.classId=${classId}
      </if>
      <if test="circleId!=null">
        and xcc.id =${circleId}
      </if>
    </where>
  </select>

  <select id="getClassCircle1" resultType="java.util.Map" parameterType="java.util.Map">
    SELECT
        <include refid="Base_class_circle_list"/>,
        tt.like_sums,
        aa.record_sums
        FROM
            xn_class_circle xcc
        LEFT JOIN (
            SELECT
                circleId,
                COUNT(1) AS like_sums
            FROM
                xn_circle_like
            GROUP BY
                circleId
        ) tt ON xcc.classId = tt.circleId
        LEFT JOIN (
            SELECT
                CONVERT (attr1, UNSIGNED INTEGER) cirle_id,
                COUNT(1) AS record_sums
            FROM
                xn_user_record
            GROUP BY
                CONVERT (attr1, UNSIGNED INTEGER)
        ) aa ON aa.cirle_id = xcc.id
        <where>
            <trim suffixOverrides="and">
                xcc.classId
                <if test="classId == null">
                  IN (
                  SELECT DISTINCT
                  hc.ClassId
                  FROM
                  hl_curriculum hc
                  LEFT JOIN hl_teacher ht ON ht.ID = hc.ClassTeacher
                  LEFT JOIN hl_schoolyear hsy ON hsy.ID = hc.YearId
                  <where>
                    hsy.isNowYear = 192
                    <if test="teacherId !=null">
                      AND ht.Id = ${teacherId}
                    </if>
                  </where>
                  ) and
                </if>
              <if test="classId != null">
                    = ${classId} and
              </if>
              <if test="status != null">
                 xcc.`status`=${status} and
              </if>
              <if test="status == null">
                xcc.`status`= 1 or  xcc.`status`= 2 and
              </if>
            </trim>
          </where>
    <if test="page!=null and start!=null">
        LIMIT ${start},${page}
    </if>
  </select>

  <select id="getClassCircle1Count" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT
    count(1)
    FROM
    xn_class_circle xcc
    LEFT JOIN (
    SELECT
    circleId,
    COUNT(1) AS like_sums
    FROM
    xn_circle_like
    GROUP BY
    circleId
    ) tt ON xcc.classId = tt.circleId
    LEFT JOIN (
    SELECT
    CONVERT (attr1, UNSIGNED INTEGER) cirle_id,
    COUNT(1) AS record_sums
    FROM
    xn_user_record
    GROUP BY
    CONVERT (attr1, UNSIGNED INTEGER)
    ) aa ON aa.cirle_id = xcc.id
    <where>
      <trim suffixOverrides="and">
        xcc.classId
        <if test="classId == null">
          IN (
          SELECT DISTINCT
          hc.ClassId
          FROM
          hl_curriculum hc
          LEFT JOIN hl_teacher ht ON ht.ID = hc.ClassTeacher
          LEFT JOIN hl_schoolyear hsy ON hsy.ID = hc.YearId
          <where>
            hsy.isNowYear = 192
            <if test="teacherId !=null">
              AND ht.Id = ${teacherId}
            </if>
          </where>
          ) and
        </if>
        <if test="classId != null">
          = ${classId} and
        </if>
        <if test="status != null">
          xcc.`status`=${status} and
        </if>
      </trim>
    </where>
  </select>

  <select id="getPhoto" resultType="java.util.Map" parameterType="java.util.Map">
    <if test="type == 2">
      SELECT htr.ImageSrc as photos,htr.Tname as SName
      FROM hl_teacher htr
      <where>
            htr.id = ${user_id}
      </where>
    </if>
    <if test="type == 1">
      SELECT  hss.ClassName,hs.SPhoto as photos,hs.SName
      from hl_studentinfo hs
      LEFT JOIN hl_schclass hss on hs.ClassID = hss.Id
      <where>
        hs.id  = ${user_id}
      </where>
    </if>
  </select>

  <select id="getClassCircleCount" resultType="java.lang.Integer" parameterType="java.util.Map">
    SELECT
    count(1)
    from xn_class_circle xcc
    LEFT JOIN hl_studentinfo hsi on hsi.ID = xcc.userId
    LEFT JOIN hl_schclass hs on hs.ID = xcc.classId
    <where>
      xcc.userType=1
      <if test="classId !=null">
        and xcc.classId=${classId}
      </if>
      and xcc.`status`=1
    </where>
  </select>

  <update id="updateCircle" parameterType="java.util.Map">

    update xn_class_circle
    set status = #{status}
    <where> id in
      <foreach collection="list" separator="," index="index" open="(" close=")" item="circle">
        #{circle.id}
      </foreach>
    </where>

  </update>
</mapper>