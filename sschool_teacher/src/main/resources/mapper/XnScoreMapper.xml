<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.usoft.sschool_teacher.mapper.XnScoreMapper" >
  <resultMap id="BaseResultMap" type="com.usoft.smartschool.pojo.XnScore" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="StuID" property="stuid" jdbcType="INTEGER" />
    <result column="SID" property="sid" jdbcType="INTEGER" />
    <result column="CID" property="cid" jdbcType="INTEGER" />
    <result column="StudentName" property="studentname" jdbcType="VARCHAR" />
    <result column="SchoolName" property="schoolname" jdbcType="VARCHAR" />
    <result column="ClassName" property="classname" jdbcType="VARCHAR" />
    <result column="Term" property="term" jdbcType="VARCHAR" />
    <result column="TestName" property="testname" jdbcType="VARCHAR" />
    <result column="TSubject" property="tsubject" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="VARCHAR" />
    <result column="WrongNum" property="wrongnum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, StuID, SID, CID, StudentName, SchoolName, ClassName, Term, TestName, TSubject, 
    score, WrongNum
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.usoft.smartschool.pojo.XnScoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xn_score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xn_score
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xn_score
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.usoft.smartschool.pojo.XnScoreExample" >
    delete from xn_score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.usoft.smartschool.pojo.XnScore" >
    insert into xn_score (ID, StuID, SID, 
      CID, StudentName, SchoolName, 
      ClassName, Term, TestName, 
      TSubject, score, WrongNum
      )
    values (#{id,jdbcType=INTEGER}, #{stuid,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, 
      #{cid,jdbcType=INTEGER}, #{studentname,jdbcType=VARCHAR}, #{schoolname,jdbcType=VARCHAR}, 
      #{classname,jdbcType=VARCHAR}, #{term,jdbcType=VARCHAR}, #{testname,jdbcType=VARCHAR}, 
      #{tsubject,jdbcType=VARCHAR}, #{score,jdbcType=VARCHAR}, #{wrongnum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.usoft.smartschool.pojo.XnScore" >
    insert into xn_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="stuid != null" >
        StuID,
      </if>
      <if test="sid != null" >
        SID,
      </if>
      <if test="cid != null" >
        CID,
      </if>
      <if test="studentname != null" >
        StudentName,
      </if>
      <if test="schoolname != null" >
        SchoolName,
      </if>
      <if test="classname != null" >
        ClassName,
      </if>
      <if test="term != null" >
        Term,
      </if>
      <if test="testname != null" >
        TestName,
      </if>
      <if test="tsubject != null" >
        TSubject,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="wrongnum != null" >
        WrongNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuid != null" >
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="studentname != null" >
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="schoolname != null" >
        #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="classname != null" >
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="term != null" >
        #{term,jdbcType=VARCHAR},
      </if>
      <if test="testname != null" >
        #{testname,jdbcType=VARCHAR},
      </if>
      <if test="tsubject != null" >
        #{tsubject,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="wrongnum != null" >
        #{wrongnum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.usoft.smartschool.pojo.XnScoreExample" resultType="java.lang.Integer" >
    select count(*) from xn_score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xn_score
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuid != null" >
        StuID = #{record.stuid,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null" >
        SID = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null" >
        CID = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.studentname != null" >
        StudentName = #{record.studentname,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolname != null" >
        SchoolName = #{record.schoolname,jdbcType=VARCHAR},
      </if>
      <if test="record.classname != null" >
        ClassName = #{record.classname,jdbcType=VARCHAR},
      </if>
      <if test="record.term != null" >
        Term = #{record.term,jdbcType=VARCHAR},
      </if>
      <if test="record.testname != null" >
        TestName = #{record.testname,jdbcType=VARCHAR},
      </if>
      <if test="record.tsubject != null" >
        TSubject = #{record.tsubject,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=VARCHAR},
      </if>
      <if test="record.wrongnum != null" >
        WrongNum = #{record.wrongnum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xn_score
    set ID = #{record.id,jdbcType=INTEGER},
      StuID = #{record.stuid,jdbcType=INTEGER},
      SID = #{record.sid,jdbcType=INTEGER},
      CID = #{record.cid,jdbcType=INTEGER},
      StudentName = #{record.studentname,jdbcType=VARCHAR},
      SchoolName = #{record.schoolname,jdbcType=VARCHAR},
      ClassName = #{record.classname,jdbcType=VARCHAR},
      Term = #{record.term,jdbcType=VARCHAR},
      TestName = #{record.testname,jdbcType=VARCHAR},
      TSubject = #{record.tsubject,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=VARCHAR},
      WrongNum = #{record.wrongnum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.usoft.smartschool.pojo.XnScore" >
    update xn_score
    <set >
      <if test="stuid != null" >
        StuID = #{stuid,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        SID = #{sid,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        CID = #{cid,jdbcType=INTEGER},
      </if>
      <if test="studentname != null" >
        StudentName = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="schoolname != null" >
        SchoolName = #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="classname != null" >
        ClassName = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="term != null" >
        Term = #{term,jdbcType=VARCHAR},
      </if>
      <if test="testname != null" >
        TestName = #{testname,jdbcType=VARCHAR},
      </if>
      <if test="tsubject != null" >
        TSubject = #{tsubject,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="wrongnum != null" >
        WrongNum = #{wrongnum,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.usoft.smartschool.pojo.XnScore" >
    update xn_score
    set StuID = #{stuid,jdbcType=INTEGER},
      SID = #{sid,jdbcType=INTEGER},
      CID = #{cid,jdbcType=INTEGER},
      StudentName = #{studentname,jdbcType=VARCHAR},
      SchoolName = #{schoolname,jdbcType=VARCHAR},
      ClassName = #{classname,jdbcType=VARCHAR},
      Term = #{term,jdbcType=VARCHAR},
      TestName = #{testname,jdbcType=VARCHAR},
      TSubject = #{tsubject,jdbcType=VARCHAR},
      score = #{score,jdbcType=VARCHAR},
      WrongNum = #{wrongnum,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="getSemester" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT DISTINCT
      xs.Term
      from xn_score xs
      WHERE xs.CID = #{classId}
  </select>

  <select id="getExamType" resultType="java.util.Map">
    SELECT DISTINCT
      xs.TestName
      from xn_score xs
      WHERE xs.CID = #{classId}
  </select>

    <sql id="Base_score_list">
        xse.ID,xse.StuID,xse.SID,xse.CID,xse.StudentName,xse.SchoolName,
        xse.ClassName,xse.Term,xse.TestName,xse.TSubject,xse.score,xse.WrongNum
    </sql>

    <select id="getScoreSubject" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_score_list"/>
        <if test="subject != null">
            from ( SELECT DISTINCT hlc.ClassId
                from hl_teacher htr
                LEFT JOIN hl_curriculum  hlc on htr.ID = hlc.ClassTeacher
                <where>
                        htr.ID=${teacherId}
                    <if test="classId != null">
                        and hlc.ClassId = ${classId}
                    </if>
                </where>
                ) as tt
            LEFT JOIN xn_score xse on xse.CID = tt.ClassId
            <where>
                xse.TSubject = #{subject}
                <if test="testName != null">
                    and xse.TestName = #{testName}
                </if>
                <if test="term != null">
                    and  xse.Term = #{term}
                </if>
            </where>
            <if test="start !=null and page !=null">
                LIMIT ${start},${page}
            </if>
        </if>
        <if test="subject == null">
            from ( SELECT DISTINCT hlc.ClassId,hlc.Discipline
                from hl_teacher htr
                LEFT JOIN hl_curriculum  hlc on htr.ID = hlc.ClassTeacher
                <where>
                    htr.ID = ${teacherId}
                    <if test="classId != null">
                        and hlc.ClassId = ${classId}
                    </if>
                </where>
                ) as tt
            LEFT JOIN hl_enumitem he on he.ID = tt.Discipline
            LEFT JOIN xn_score xse on xse.TSubject = he.EnumItemName and xse.CID = tt.ClassId
            <where>
                <if test="testName != null">
                    xse.TestName = #{testName}
                </if>
                <if test="term != null">
                    and  xse.Term = #{term}
                </if>
            </where>
            <if test="start !=null and page !=null">
                LIMIT ${start},${page}
            </if>
        </if>
    </select>

        <select id="getScoreSubjectCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT
        count(1)
        <if test="subject != null">
            from ( SELECT DISTINCT hlc.ClassId
            from hl_teacher htr
            LEFT JOIN hl_curriculum  hlc on htr.ID = hlc.ClassTeacher
            <where>
                htr.ID=${teacherId}
                <if test="classId != null">
                    and hlc.ClassId = ${classId}
                </if>
            </where>
            ) as tt
            LEFT JOIN xn_score xse on xse.CID = tt.ClassId
            <where>
                xse.TSubject = #{subject}
                <if test="testName != null">
                    and xse.TestName = #{testName}
                </if>
                <if test="term != null">
                    and  xse.Term = #{term}
                </if>
            </where>
        </if>
        <if test="subject == null">
            from ( SELECT DISTINCT hlc.ClassId,hlc.Discipline
            from hl_teacher htr
            LEFT JOIN hl_curriculum  hlc on htr.ID = hlc.ClassTeacher
            <where>
                htr.ID = ${teacherId}
                <if test="classId != null">
                    and hlc.ClassId = ${classId}
                </if>
            </where>
            ) as tt
            LEFT JOIN hl_enumitem he on he.ID = tt.Discipline
            LEFT JOIN xn_score xse on xse.TSubject = he.EnumItemName and xse.CID = tt.ClassId
            <where>
                <if test="testName != null">
                    xse.TestName = #{testName}
                </if>
                <if test="term != null">
                    and  xse.Term = #{term}
                </if>
            </where>
        </if>
    </select>

    <select id="getClassScore" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT SUM(score) as number,COUNT(1) as resnum,AVG(score) as avges,
            xse.TSubject,
            hh.ClassName,hh.ID
            FROM xn_score xse,
            (
                    SELECT hs2.ID,hs2.ClassName
                        FROM hl_schclass hs1
                            LEFT JOIN hl_schclass hs2 on hs1.GradeType = hs2.GradeType
                            <where>
                                hs1.ID = ${classId}
                            </where>
            ) as hh
        <if test="subject!= null">
            <where>
                xse.CID = hh.ID and
                xse.TSubject=#{subject}
                <if test="testName != null">
                    and xse.TestName = #{testName}
                </if>
                <if test="term != null">
                    and  xse.Term = #{term}
                </if>
            </where>
            GROUP BY hh.ID,hh.ClassName,xse.TSubject
        </if>
        <if test="subject==null">
            <where>
                <if test="testName != null">
                    xse.TestName = #{testName}
                </if>
                <if test="term != null">
                    and  xse.Term = #{term}
                </if>
            </where>
            GROUP BY hh.ID,hh.ClassName,xse.TSubject
        </if>
        <if test="subject != null">
            ORDER BY avges DESC
        </if>

    </select>

    <select id="getSubject" parameterType="java.util.Map" resultType="java.util.Map">
        select
            he.EnumItemName
        from ( SELECT DISTINCT hlc.ClassId,hlc.Discipline
        from hl_teacher htr
        LEFT JOIN hl_curriculum  hlc on htr.ID = hlc.ClassTeacher
        <where>
            htr.ID = ${teacherId}
            <if test="classId != null">
                and hlc.ClassId = ${classId}
            </if>
        </where>
        ) as tt
        LEFT JOIN hl_enumitem he on he.ID = tt.Discipline
    </select>
</mapper>