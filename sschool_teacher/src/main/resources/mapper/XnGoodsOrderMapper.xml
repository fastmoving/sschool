<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.usoft.sschool_teacher.mapper.XnGoodsOrderMapper">
  <resultMap id="BaseResultMap" type="com.usoft.smartschool.pojo.XnGoodsOrder">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="UID" jdbcType="INTEGER" property="uid" />
    <result column="goodsId" jdbcType="INTEGER" property="goodsid" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsname" />
    <result column="addressId" jdbcType="INTEGER" property="addressid" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="orderNumber" jdbcType="VARCHAR" property="ordernumber" />
    <result column="buyTime" jdbcType="TIMESTAMP" property="buytime" />
    <result column="orderState" jdbcType="TINYINT" property="orderstate" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="totalPrice" jdbcType="DECIMAL" property="totalprice" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="attr1" jdbcType="VARCHAR" property="attr1" />
    <result column="attr2" jdbcType="VARCHAR" property="attr2" />
    <result column="attr3" jdbcType="VARCHAR" property="attr3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, userName, UID, goodsId, goodsName, addressId, number, orderNumber, buyTime, orderState, 
    price, totalPrice, type, phone, createTime, attr1, attr2, attr3
  </sql>
  <select id="selectByExample" parameterType="com.usoft.smartschool.pojo.XnGoodsOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xn_goods_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xn_goods_order
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xn_goods_order
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.usoft.smartschool.pojo.XnGoodsOrderExample">
    delete from xn_goods_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.usoft.smartschool.pojo.XnGoodsOrder">
    insert into xn_goods_order (ID, userName, UID, 
      goodsId, goodsName, addressId, 
      number, orderNumber, buyTime, 
      orderState, price, totalPrice, 
      type, phone, createTime, 
      attr1, attr2, attr3
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, 
      #{goodsid,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{addressid,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{ordernumber,jdbcType=VARCHAR}, #{buytime,jdbcType=TIMESTAMP}, 
      #{orderstate,jdbcType=TINYINT}, #{price,jdbcType=DECIMAL}, #{totalprice,jdbcType=DECIMAL}, 
      #{type,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{attr1,jdbcType=VARCHAR}, #{attr2,jdbcType=VARCHAR}, #{attr3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.usoft.smartschool.pojo.XnGoodsOrder">
    insert into xn_goods_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="uid != null">
        UID,
      </if>
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="goodsname != null">
        goodsName,
      </if>
      <if test="addressid != null">
        addressId,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="ordernumber != null">
        orderNumber,
      </if>
      <if test="buytime != null">
        buyTime,
      </if>
      <if test="orderstate != null">
        orderState,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="totalprice != null">
        totalPrice,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="attr1 != null">
        attr1,
      </if>
      <if test="attr2 != null">
        attr2,
      </if>
      <if test="attr3 != null">
        attr3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="addressid != null">
        #{addressid,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="ordernumber != null">
        #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="buytime != null">
        #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderstate != null">
        #{orderstate,jdbcType=TINYINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalprice != null">
        #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="attr1 != null">
        #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null">
        #{attr2,jdbcType=VARCHAR},
      </if>
      <if test="attr3 != null">
        #{attr3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.usoft.smartschool.pojo.XnGoodsOrderExample" resultType="java.lang.Integer">
    select count(*) from xn_goods_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update xn_goods_order
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        UID = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsid != null">
        goodsId = #{record.goodsid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsname != null">
        goodsName = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.addressid != null">
        addressId = #{record.addressid,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.ordernumber != null">
        orderNumber = #{record.ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="record.buytime != null">
        buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderstate != null">
        orderState = #{record.orderstate,jdbcType=TINYINT},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.totalprice != null">
        totalPrice = #{record.totalprice,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attr1 != null">
        attr1 = #{record.attr1,jdbcType=VARCHAR},
      </if>
      <if test="record.attr2 != null">
        attr2 = #{record.attr2,jdbcType=VARCHAR},
      </if>
      <if test="record.attr3 != null">
        attr3 = #{record.attr3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update xn_goods_order
    set ID = #{record.id,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      UID = #{record.uid,jdbcType=INTEGER},
      goodsId = #{record.goodsid,jdbcType=INTEGER},
      goodsName = #{record.goodsname,jdbcType=VARCHAR},
      addressId = #{record.addressid,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      orderNumber = #{record.ordernumber,jdbcType=VARCHAR},
      buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      orderState = #{record.orderstate,jdbcType=TINYINT},
      price = #{record.price,jdbcType=DECIMAL},
      totalPrice = #{record.totalprice,jdbcType=DECIMAL},
      type = #{record.type,jdbcType=TINYINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      attr1 = #{record.attr1,jdbcType=VARCHAR},
      attr2 = #{record.attr2,jdbcType=VARCHAR},
      attr3 = #{record.attr3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.usoft.smartschool.pojo.XnGoodsOrder">
    update xn_goods_order
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        UID = #{uid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        goodsId = #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null">
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="addressid != null">
        addressId = #{addressid,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="ordernumber != null">
        orderNumber = #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="buytime != null">
        buyTime = #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderstate != null">
        orderState = #{orderstate,jdbcType=TINYINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalprice != null">
        totalPrice = #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="attr1 != null">
        attr1 = #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null">
        attr2 = #{attr2,jdbcType=VARCHAR},
      </if>
      <if test="attr3 != null">
        attr3 = #{attr3,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.usoft.smartschool.pojo.XnGoodsOrder">
    update xn_goods_order
    set userName = #{username,jdbcType=VARCHAR},
      UID = #{uid,jdbcType=INTEGER},
      goodsId = #{goodsid,jdbcType=INTEGER},
      goodsName = #{goodsname,jdbcType=VARCHAR},
      addressId = #{addressid,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      orderNumber = #{ordernumber,jdbcType=VARCHAR},
      buyTime = #{buytime,jdbcType=TIMESTAMP},
      orderState = #{orderstate,jdbcType=TINYINT},
      price = #{price,jdbcType=DECIMAL},
      totalPrice = #{totalprice,jdbcType=DECIMAL},
      type = #{type,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      attr1 = #{attr1,jdbcType=VARCHAR},
      attr2 = #{attr2,jdbcType=VARCHAR},
      attr3 = #{attr3,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="getMyOrder" resultType="map" parameterType="java.util.Map">
    SELECT
    a.ID, a.userName, a.UID, a.goodsId, a.goodsName, a.addressId, a.number, a.orderNumber, a.buyTime, a.orderState,
    a.price, a.totalPrice, a.type, a.phone, a.createTime, a.attr1, a.attr2, a.attr3, b.thumbnail
    from xn_goods_order a left join xn_goods_manage b on a.goodsId = b.id
    <where>
        a.attr1 = 2
      <if test="teacherId!=null">
        and  a.UID = #{teacherId}
      </if>
      <if test="schoolId!=null">
        and a.attr2 =#{schoolId}
      </if>
    </where>
    order by a.createTime DESC
    Limit ${start},${page}
  </select>

  <select id="getMyOrderCount" resultType="java.lang.Integer" parameterType="java.util.Map">
    SELECT
    count(1)
    from xn_goods_order xgo
    <where>
      xgo.attr1 = 2
      <if test="teacherId!=null">
        and  xgo.UID = #{teacherId}
      </if>
      <if test="schoolId!=null">
        and xgo.attr2 =#{schoolId}
      </if>
    </where>
  </select>

  <select id="getOrderIfo" resultType="java.util.Map" parameterType="java.util.Map">
    SELECT
        xgo.ID,
        xgo.userName,
        xgo.UID,
        xgo.goodsId,
        xgo.addressId,
        xgo.number,
        xgo.orderNumber,
        xgo.buyTime,
        xgo.orderState,
        xgo.totalPrice,
        xgo.type,
        xgo.phone,
        xgo.createTime,
        xgo.attr1,
        xgo.attr2,
        xgo.attr3 AS buy_type,
        xgm.goodsName,
        xgm.desImg,
        xgm.thumbnail,
        xad.province,
        xad.city,
        xad.dist,
        xad.address,
        `xad`.phone AS link_phone,
        `xad`.username AS link_user_name,
        xgm.price
    from xn_goods_order xgo
        LEFT JOIN xn_address xad on xad.id = xgo.addressId
        LEFT JOIN xn_goods_manage xgm on xgm.ID = xgo.goodsId
        <where>
          xgo.attr1 = 2
          <if test="teacherId !=null">
           and  xgo.UID = ${teacherId}
          </if>
          <if test="id !=null">
           and xgo.ID = ${id}
          </if>
        </where>
  </select>
</mapper>