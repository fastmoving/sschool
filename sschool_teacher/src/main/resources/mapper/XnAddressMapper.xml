<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.usoft.sschool_teacher.mapper.XnAddressMapper">
  <resultMap id="BaseResultMap" type="com.usoft.smartschool.pojo.XnAddress">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="dist" jdbcType="VARCHAR" property="dist" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="isDefault" jdbcType="TINYINT" property="isdefault" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="attr1" jdbcType="VARCHAR" property="attr1" />
    <result column="attr2" jdbcType="VARCHAR" property="attr2" />
    <result column="attr3" jdbcType="VARCHAR" property="attr3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, type, province, city, dist, address, username, phone, isDefault, createTime, 
    attr1, attr2, attr3
  </sql>
  <select id="selectByExample" parameterType="com.usoft.smartschool.pojo.XnAddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xn_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xn_address
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xn_address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.usoft.smartschool.pojo.XnAddressExample">
    delete from xn_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.usoft.smartschool.pojo.XnAddress">
    insert into xn_address (id, userId, type, 
      province, city, dist, 
      address, username, phone, 
      isDefault, createTime, attr1, 
      attr2, attr3)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{dist,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{isdefault,jdbcType=TINYINT}, #{createtime,jdbcType=TIMESTAMP}, #{attr1,jdbcType=VARCHAR}, 
      #{attr2,jdbcType=VARCHAR}, #{attr3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.usoft.smartschool.pojo.XnAddress">
    insert into xn_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="dist != null">
        dist,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="isdefault != null">
        isDefault,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="attr1 != null">
        attr1,
      </if>
      <if test="attr2 != null">
        attr2,
      </if>
      <if test="attr3 != null">
        attr3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="dist != null">
        #{dist,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isdefault != null">
        #{isdefault,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="attr1 != null">
        #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null">
        #{attr2,jdbcType=VARCHAR},
      </if>
      <if test="attr3 != null">
        #{attr3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.usoft.smartschool.pojo.XnAddressExample" resultType="java.lang.Integer">
    select count(*) from xn_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update xn_address
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.dist != null">
        dist = #{record.dist,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.isdefault != null">
        isDefault = #{record.isdefault,jdbcType=TINYINT},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attr1 != null">
        attr1 = #{record.attr1,jdbcType=VARCHAR},
      </if>
      <if test="record.attr2 != null">
        attr2 = #{record.attr2,jdbcType=VARCHAR},
      </if>
      <if test="record.attr3 != null">
        attr3 = #{record.attr3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update xn_address
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      dist = #{record.dist,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      isDefault = #{record.isdefault,jdbcType=TINYINT},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      attr1 = #{record.attr1,jdbcType=VARCHAR},
      attr2 = #{record.attr2,jdbcType=VARCHAR},
      attr3 = #{record.attr3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.usoft.smartschool.pojo.XnAddress">
    update xn_address
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="dist != null">
        dist = #{dist,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isdefault != null">
        isDefault = #{isdefault,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="attr1 != null">
        attr1 = #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null">
        attr2 = #{attr2,jdbcType=VARCHAR},
      </if>
      <if test="attr3 != null">
        attr3 = #{attr3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.usoft.smartschool.pojo.XnAddress">
    update xn_address
    set userId = #{userid,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      dist = #{dist,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      isDefault = #{isdefault,jdbcType=TINYINT},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      attr1 = #{attr1,jdbcType=VARCHAR},
      attr2 = #{attr2,jdbcType=VARCHAR},
      attr3 = #{attr3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <sql id="Base_address_list">
    xds.id,xds.userId,xds.type,xds.province,xds.city,xds.dist,
    xds.address,xds.username,xds.phone,xds.isDefault,xds.createTime,
    xds.attr1,xds.attr2,xds.attr3
  </sql>

  <select id="getIsDefault" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_address_list"/>
    from xn_address xds
      <where>
          xds.isDefault = 1
          and xds.type = 1
          <if test="_parameter !=null">
           and xds.userId = ${teacherId}
          </if>
      </where>
  </select>

  <select id="getAddresses" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_address_list"/>
    from xn_address xds
    <where>
         xds.type = 1
      <if test="teacherId !=null">
        and xds.userId = ${teacherId}
      </if>
      <if test="addressId !=null">
        and xds.id = ${addressId}
      </if>
    </where>
      order by xds.createTime DESC
    <if test="page!=null and start!=null">
      LIMIT ${start},${page}
    </if>
  </select>

  <select id="getAddressesCount" resultType="java.lang.Integer" parameterType="java.util.Map">
    select
     count(1)
    from xn_address xds
    <where>
      xds.type = 1
      <if test="_parameter !=null">
        and xds.userId = ${teacherId}
      </if>
    </where>
  </select>

  <delete id="removeAddress">
    delete from xn_address
    <where>
        id in
      <foreach collection="addresses" item="item" index="index" open="(" close=")" separator=",">
        #{item}
      </foreach>
    </where>
  </delete>
</mapper>