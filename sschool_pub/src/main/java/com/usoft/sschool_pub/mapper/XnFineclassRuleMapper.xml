<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.usoft.sschool_pub.mapper.XnFineclassRuleMapper" >
  <resultMap id="BaseResultMap" type="com.usoft.smartschool.pojo.XnFineclassRule" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="isPay" property="ispay" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="SID" property="sid" jdbcType="INTEGER" />
    <result column="schoolName" property="schoolname" jdbcType="VARCHAR" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="TID" property="tid" jdbcType="INTEGER" />
    <result column="teacherName" property="teachername" jdbcType="VARCHAR" />
    <result column="studentPay" property="studentpay" jdbcType="DECIMAL" />
    <result column="teacherPay" property="teacherpay" jdbcType="DECIMAL" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="createUser" property="createuser" jdbcType="VARCHAR" />
    <result column="UID" property="uid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, isPay, type, SID, schoolName, subject, TID, teacherName, studentPay, teacherPay, 
    createTime, createUser, UID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.usoft.smartschool.pojo.XnFineclassRuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xn_fineclass_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xn_fineclass_rule
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xn_fineclass_rule
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.usoft.smartschool.pojo.XnFineclassRuleExample" >
    delete from xn_fineclass_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.usoft.smartschool.pojo.XnFineclassRule" >
    insert into xn_fineclass_rule (ID, isPay, type, 
      SID, schoolName, subject, 
      TID, teacherName, studentPay, 
      teacherPay, createTime, createUser, 
      UID)
    values (#{id,jdbcType=INTEGER}, #{ispay,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, 
      #{sid,jdbcType=INTEGER}, #{schoolname,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, 
      #{tid,jdbcType=INTEGER}, #{teachername,jdbcType=VARCHAR}, #{studentpay,jdbcType=DECIMAL}, 
      #{teacherpay,jdbcType=DECIMAL}, #{createtime,jdbcType=TIMESTAMP}, #{createuser,jdbcType=VARCHAR}, 
      #{uid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.usoft.smartschool.pojo.XnFineclassRule" >
    insert into xn_fineclass_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="ispay != null" >
        isPay,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="sid != null" >
        SID,
      </if>
      <if test="schoolname != null" >
        schoolName,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="tid != null" >
        TID,
      </if>
      <if test="teachername != null" >
        teacherName,
      </if>
      <if test="studentpay != null" >
        studentPay,
      </if>
      <if test="teacherpay != null" >
        teacherPay,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="createuser != null" >
        createUser,
      </if>
      <if test="uid != null" >
        UID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ispay != null" >
        #{ispay,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="schoolname != null" >
        #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="teachername != null" >
        #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="studentpay != null" >
        #{studentpay,jdbcType=DECIMAL},
      </if>
      <if test="teacherpay != null" >
        #{teacherpay,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null" >
        #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.usoft.smartschool.pojo.XnFineclassRuleExample" resultType="java.lang.Integer" >
    select count(*) from xn_fineclass_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xn_fineclass_rule
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ispay != null" >
        isPay = #{record.ispay,jdbcType=TINYINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.sid != null" >
        SID = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.schoolname != null" >
        schoolName = #{record.schoolname,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null" >
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.tid != null" >
        TID = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.teachername != null" >
        teacherName = #{record.teachername,jdbcType=VARCHAR},
      </if>
      <if test="record.studentpay != null" >
        studentPay = #{record.studentpay,jdbcType=DECIMAL},
      </if>
      <if test="record.teacherpay != null" >
        teacherPay = #{record.teacherpay,jdbcType=DECIMAL},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createuser != null" >
        createUser = #{record.createuser,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null" >
        UID = #{record.uid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xn_fineclass_rule
    set ID = #{record.id,jdbcType=INTEGER},
      isPay = #{record.ispay,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      SID = #{record.sid,jdbcType=INTEGER},
      schoolName = #{record.schoolname,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      TID = #{record.tid,jdbcType=INTEGER},
      teacherName = #{record.teachername,jdbcType=VARCHAR},
      studentPay = #{record.studentpay,jdbcType=DECIMAL},
      teacherPay = #{record.teacherpay,jdbcType=DECIMAL},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      createUser = #{record.createuser,jdbcType=VARCHAR},
      UID = #{record.uid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.usoft.smartschool.pojo.XnFineclassRule" >
    update xn_fineclass_rule
    <set >
      <if test="ispay != null" >
        isPay = #{ispay,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="sid != null" >
        SID = #{sid,jdbcType=INTEGER},
      </if>
      <if test="schoolname != null" >
        schoolName = #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="tid != null" >
        TID = #{tid,jdbcType=INTEGER},
      </if>
      <if test="teachername != null" >
        teacherName = #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="studentpay != null" >
        studentPay = #{studentpay,jdbcType=DECIMAL},
      </if>
      <if test="teacherpay != null" >
        teacherPay = #{teacherpay,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null" >
        createUser = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        UID = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.usoft.smartschool.pojo.XnFineclassRule" >
    update xn_fineclass_rule
    set isPay = #{ispay,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      SID = #{sid,jdbcType=INTEGER},
      schoolName = #{schoolname,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      TID = #{tid,jdbcType=INTEGER},
      teacherName = #{teachername,jdbcType=VARCHAR},
      studentPay = #{studentpay,jdbcType=DECIMAL},
      teacherPay = #{teacherpay,jdbcType=DECIMAL},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      createUser = #{createuser,jdbcType=VARCHAR},
      UID = #{uid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>