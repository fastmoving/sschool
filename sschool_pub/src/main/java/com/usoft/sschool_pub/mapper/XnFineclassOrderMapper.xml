<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.usoft.sschool_pub.mapper.XnFineclassOrderMapper" >
  <resultMap id="BaseResultMap" type="com.usoft.smartschool.pojo.XnFineclassOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sid" property="sid" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="fid" property="fid" jdbcType="INTEGER" />
    <result column="userType" property="usertype" jdbcType="TINYINT" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="orderNumber" property="ordernumber" jdbcType="INTEGER" />
    <result column="buyTime" property="buytime" jdbcType="TIMESTAMP" />
    <result column="buyType" property="buytype" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="attr1" property="attr1" jdbcType="VARCHAR" />
    <result column="attr2" property="attr2" jdbcType="VARCHAR" />
    <result column="attr3" property="attr3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sid, cid, fid, userType, userId, orderNumber, buyTime, buyType, createTime, number, 
    attr1, attr2, attr3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.usoft.smartschool.pojo.XnFineclassOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xn_fineclass_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xn_fineclass_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xn_fineclass_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.usoft.smartschool.pojo.XnFineclassOrderExample" >
    delete from xn_fineclass_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.usoft.smartschool.pojo.XnFineclassOrder" >
    insert into xn_fineclass_order (id, sid, cid, 
      fid, userType, userId, 
      orderNumber, buyTime, buyType, 
      createTime, number, attr1, 
      attr2, attr3)
    values (#{id,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, 
      #{fid,jdbcType=INTEGER}, #{usertype,jdbcType=TINYINT}, #{userid,jdbcType=INTEGER}, 
      #{ordernumber,jdbcType=INTEGER}, #{buytime,jdbcType=TIMESTAMP}, #{buytype,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{number,jdbcType=INTEGER}, #{attr1,jdbcType=VARCHAR}, 
      #{attr2,jdbcType=VARCHAR}, #{attr3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.usoft.smartschool.pojo.XnFineclassOrder" >
    insert into xn_fineclass_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="fid != null" >
        fid,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="ordernumber != null" >
        orderNumber,
      </if>
      <if test="buytime != null" >
        buyTime,
      </if>
      <if test="buytype != null" >
        buyType,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="attr1 != null" >
        attr1,
      </if>
      <if test="attr2 != null" >
        attr2,
      </if>
      <if test="attr3 != null" >
        attr3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="fid != null" >
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=TINYINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="ordernumber != null" >
        #{ordernumber,jdbcType=INTEGER},
      </if>
      <if test="buytime != null" >
        #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="buytype != null" >
        #{buytype,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="attr1 != null" >
        #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null" >
        #{attr2,jdbcType=VARCHAR},
      </if>
      <if test="attr3 != null" >
        #{attr3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.usoft.smartschool.pojo.XnFineclassOrderExample" resultType="java.lang.Integer" >
    select count(*) from xn_fineclass_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xn_fineclass_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null" >
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.fid != null" >
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.usertype != null" >
        userType = #{record.usertype,jdbcType=TINYINT},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.ordernumber != null" >
        orderNumber = #{record.ordernumber,jdbcType=INTEGER},
      </if>
      <if test="record.buytime != null" >
        buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buytype != null" >
        buyType = #{record.buytype,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.attr1 != null" >
        attr1 = #{record.attr1,jdbcType=VARCHAR},
      </if>
      <if test="record.attr2 != null" >
        attr2 = #{record.attr2,jdbcType=VARCHAR},
      </if>
      <if test="record.attr3 != null" >
        attr3 = #{record.attr3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xn_fineclass_order
    set id = #{record.id,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      fid = #{record.fid,jdbcType=INTEGER},
      userType = #{record.usertype,jdbcType=TINYINT},
      userId = #{record.userid,jdbcType=INTEGER},
      orderNumber = #{record.ordernumber,jdbcType=INTEGER},
      buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      buyType = #{record.buytype,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      number = #{record.number,jdbcType=INTEGER},
      attr1 = #{record.attr1,jdbcType=VARCHAR},
      attr2 = #{record.attr2,jdbcType=VARCHAR},
      attr3 = #{record.attr3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.usoft.smartschool.pojo.XnFineclassOrder" >
    update xn_fineclass_order
    <set >
      <if test="sid != null" >
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="fid != null" >
        fid = #{fid,jdbcType=INTEGER},
      </if>
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=TINYINT},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="ordernumber != null" >
        orderNumber = #{ordernumber,jdbcType=INTEGER},
      </if>
      <if test="buytime != null" >
        buyTime = #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="buytype != null" >
        buyType = #{buytype,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="attr1 != null" >
        attr1 = #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null" >
        attr2 = #{attr2,jdbcType=VARCHAR},
      </if>
      <if test="attr3 != null" >
        attr3 = #{attr3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.usoft.smartschool.pojo.XnFineclassOrder" >
    update xn_fineclass_order
    set sid = #{sid,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      fid = #{fid,jdbcType=INTEGER},
      userType = #{usertype,jdbcType=TINYINT},
      userId = #{userid,jdbcType=INTEGER},
      orderNumber = #{ordernumber,jdbcType=INTEGER},
      buyTime = #{buytime,jdbcType=TIMESTAMP},
      buyType = #{buytype,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      number = #{number,jdbcType=INTEGER},
      attr1 = #{attr1,jdbcType=VARCHAR},
      attr2 = #{attr2,jdbcType=VARCHAR},
      attr3 = #{attr3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>