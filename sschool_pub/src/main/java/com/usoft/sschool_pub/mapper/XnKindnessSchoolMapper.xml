<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.usoft.sschool_pub.mapper.XnKindnessSchoolMapper" >
  <resultMap id="BaseResultMap" type="com.usoft.smartschool.pojo.XnKindnessSchool" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userType" property="usertype" jdbcType="TINYINT" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="schoolId" property="schoolid" jdbcType="INTEGER" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="goodsType" property="goodstype" jdbcType="INTEGER" />
    <result column="goodsStatus" property="goodsstatus" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="kindNum" property="kindnum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userType, userId, schoolId, img, description, phone, goodsType, goodsStatus, 
    status, createTime, kindNum
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.usoft.smartschool.pojo.XnKindnessSchoolExample" >

    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xn_kindness_school
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{startRow},#{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xn_kindness_school
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xn_kindness_school
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.usoft.smartschool.pojo.XnKindnessSchoolExample" >
    delete from xn_kindness_school
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.usoft.smartschool.pojo.XnKindnessSchool" >
    insert into xn_kindness_school (id, userType, userId, 
      schoolId, img, description, 
      phone, goodsType, goodsStatus, 
      status, createTime, kindNum
      )
    values (#{id,jdbcType=INTEGER}, #{usertype,jdbcType=TINYINT}, #{userid,jdbcType=INTEGER}, 
      #{schoolid,jdbcType=INTEGER}, #{img,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{goodstype,jdbcType=INTEGER}, #{goodsstatus,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{kindnum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.usoft.smartschool.pojo.XnKindnessSchool" >
    insert into xn_kindness_school
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="schoolid != null" >
        schoolId,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="goodstype != null" >
        goodsType,
      </if>
      <if test="goodsstatus != null" >
        goodsStatus,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="kindnum != null" >
        kindNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=TINYINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="schoolid != null" >
        #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="goodstype != null" >
        #{goodstype,jdbcType=INTEGER},
      </if>
      <if test="goodsstatus != null" >
        #{goodsstatus,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="kindnum != null" >
        #{kindnum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.usoft.smartschool.pojo.XnKindnessSchoolExample" resultType="java.lang.Integer" >
    select count(*) from xn_kindness_school
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xn_kindness_school
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.usertype != null" >
        userType = #{record.usertype,jdbcType=TINYINT},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.schoolid != null" >
        schoolId = #{record.schoolid,jdbcType=INTEGER},
      </if>
      <if test="record.img != null" >
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.goodstype != null" >
        goodsType = #{record.goodstype,jdbcType=INTEGER},
      </if>
      <if test="record.goodsstatus != null" >
        goodsStatus = #{record.goodsstatus,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.kindnum != null" >
        kindNum = #{record.kindnum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xn_kindness_school
    set id = #{record.id,jdbcType=INTEGER},
      userType = #{record.usertype,jdbcType=TINYINT},
      userId = #{record.userid,jdbcType=INTEGER},
      schoolId = #{record.schoolid,jdbcType=INTEGER},
      img = #{record.img,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      goodsType = #{record.goodstype,jdbcType=INTEGER},
      goodsStatus = #{record.goodsstatus,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      kindNum = #{record.kindnum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.usoft.smartschool.pojo.XnKindnessSchool" >
    update xn_kindness_school
    <set >
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=TINYINT},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="schoolid != null" >
        schoolId = #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="goodstype != null" >
        goodsType = #{goodstype,jdbcType=INTEGER},
      </if>
      <if test="goodsstatus != null" >
        goodsStatus = #{goodsstatus,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="kindnum != null" >
        kindNum = #{kindnum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.usoft.smartschool.pojo.XnKindnessSchool" >
    update xn_kindness_school
    set userType = #{usertype,jdbcType=TINYINT},
      userId = #{userid,jdbcType=INTEGER},
      schoolId = #{schoolid,jdbcType=INTEGER},
      img = #{img,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      goodsType = #{goodstype,jdbcType=INTEGER},
      goodsStatus = #{goodsstatus,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      kindNum = #{kindnum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="kindnessRanking" resultType="map">
    select userType ut, userId uid, sum(kindNum) num
    from xn_kindness_school
     where schoolId = #{schoolid,jdbcType=INTEGER} and userType in(1,2) and goodsStatus=2
    group by userId,userType
    ORDER BY num desc
  </select>
  <select id="myRank" resultType="Object">
    SELECT count(*) FROM (select userId, sum(kindNum) num
    from xn_kindness_school
		GROUP BY userId
		ORDER BY num desc) as a
		WHERE a.num<![CDATA[>= ]]>#{kindnum,jdbcType=INTEGER}
  </select>
</mapper>