<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.usoft.sschool_student.mapper.XnSupplyManageMapper" >
  <resultMap id="BaseResultMap" type="com.usoft.smartschool.pojo.XnSupplyManage" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="supplyName" property="supplyname" jdbcType="VARCHAR" />
    <result column="supplyType" property="supplytype" jdbcType="VARCHAR" />
    <result column="legalPerson" property="legalperson" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="operateType" property="operatetype" jdbcType="VARCHAR" />
    <result column="isLegal" property="islegal" jdbcType="TINYINT" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="UID" property="uid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, supplyName, supplyType, legalPerson, phone, operateType, isLegal, createTime, 
    UID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.usoft.smartschool.pojo.XnSupplyManageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xn_supply_manage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xn_supply_manage
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xn_supply_manage
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.usoft.smartschool.pojo.XnSupplyManageExample" >
    delete from xn_supply_manage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.usoft.smartschool.pojo.XnSupplyManage" >
    insert into xn_supply_manage (ID, supplyName, supplyType, 
      legalPerson, phone, operateType, 
      isLegal, createTime, UID
      )
    values (#{id,jdbcType=INTEGER}, #{supplyname,jdbcType=VARCHAR}, #{supplytype,jdbcType=VARCHAR}, 
      #{legalperson,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{operatetype,jdbcType=VARCHAR}, 
      #{islegal,jdbcType=TINYINT}, #{createtime,jdbcType=TIMESTAMP}, #{uid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.usoft.smartschool.pojo.XnSupplyManage" >
    insert into xn_supply_manage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="supplyname != null" >
        supplyName,
      </if>
      <if test="supplytype != null" >
        supplyType,
      </if>
      <if test="legalperson != null" >
        legalPerson,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="operatetype != null" >
        operateType,
      </if>
      <if test="islegal != null" >
        isLegal,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="uid != null" >
        UID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="supplyname != null" >
        #{supplyname,jdbcType=VARCHAR},
      </if>
      <if test="supplytype != null" >
        #{supplytype,jdbcType=VARCHAR},
      </if>
      <if test="legalperson != null" >
        #{legalperson,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="operatetype != null" >
        #{operatetype,jdbcType=VARCHAR},
      </if>
      <if test="islegal != null" >
        #{islegal,jdbcType=TINYINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.usoft.smartschool.pojo.XnSupplyManageExample" resultType="java.lang.Integer" >
    select count(*) from xn_supply_manage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xn_supply_manage
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.supplyname != null" >
        supplyName = #{record.supplyname,jdbcType=VARCHAR},
      </if>
      <if test="record.supplytype != null" >
        supplyType = #{record.supplytype,jdbcType=VARCHAR},
      </if>
      <if test="record.legalperson != null" >
        legalPerson = #{record.legalperson,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.operatetype != null" >
        operateType = #{record.operatetype,jdbcType=VARCHAR},
      </if>
      <if test="record.islegal != null" >
        isLegal = #{record.islegal,jdbcType=TINYINT},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uid != null" >
        UID = #{record.uid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xn_supply_manage
    set ID = #{record.id,jdbcType=INTEGER},
      supplyName = #{record.supplyname,jdbcType=VARCHAR},
      supplyType = #{record.supplytype,jdbcType=VARCHAR},
      legalPerson = #{record.legalperson,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      operateType = #{record.operatetype,jdbcType=VARCHAR},
      isLegal = #{record.islegal,jdbcType=TINYINT},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      UID = #{record.uid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.usoft.smartschool.pojo.XnSupplyManage" >
    update xn_supply_manage
    <set >
      <if test="supplyname != null" >
        supplyName = #{supplyname,jdbcType=VARCHAR},
      </if>
      <if test="supplytype != null" >
        supplyType = #{supplytype,jdbcType=VARCHAR},
      </if>
      <if test="legalperson != null" >
        legalPerson = #{legalperson,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="operatetype != null" >
        operateType = #{operatetype,jdbcType=VARCHAR},
      </if>
      <if test="islegal != null" >
        isLegal = #{islegal,jdbcType=TINYINT},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        UID = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.usoft.smartschool.pojo.XnSupplyManage" >
    update xn_supply_manage
    set supplyName = #{supplyname,jdbcType=VARCHAR},
      supplyType = #{supplytype,jdbcType=VARCHAR},
      legalPerson = #{legalperson,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      operateType = #{operatetype,jdbcType=VARCHAR},
      isLegal = #{islegal,jdbcType=TINYINT},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      UID = #{uid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>